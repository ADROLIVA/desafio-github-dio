# Comandos Importantes no Git/Github

-  **git init** - Esse comando cria um repositório vazio ou transforma uma pasta que você já tem e que não está com controle de versão, em um repositório.
-  git clone <https://url-do-link> - O Git clone é um comando para baixar o código-fonte existente de um repositório remoto
-  git remote rm origin - Quando você clonar um repositório, o código é copiado para a o seu computador e continua linkado ao original, como foi explicado lá na descrição do que é um sistema distribuído. Se você quiser desvincular a sua cópia do original, rode o comando.
-  git push -u (remote nome-da-branch) - Este comando criará uma *branch *local. Para upar a nova *branch* para o repositório remoto
-  git status - O comando status do Git fornece algumas informações sobre a *branch *em que você estiver no momento, como seu nome, se ela está atualizada em relação à master e quais arquivos foram alterados.
-  git add (arquivo) - Precisamos usar o comando **git add **para incluir as alterações de um arquivo em nosso próximo *commit*.
-  git add -A - Para adicionar, de uma vez, todos os arquivos modificados
-  git commit -m "mensagem explicando a mudança no código" - Este comando é como definir um ponto de verificação no processo de desenvolvimento, para o qual você pode voltar mais tarde, se necessário.
-  git push remote (nome-do-branch) - O comando **git push** envia e salva suas confirmações no repositório remoto.
-  git push -u origin (nome-do-branch) - se seu branch for criado recentemente, você também precisará fazer upload do branch com esse comando
-  git pull <remote> - Este comando é uma combinação de *git fetch *(baixa as alterações do repositório remoto mas não mescla elas com o seu)* *e* git merge* (que mescla tudo junto), o que significa que, quando usamos o **git pull**, ele recebe as atualizações do repositório remoto (**git fetch**) e aplica imediatamente as alterações mais recentes no seu local (**git merge**).
-  Git remote add origin (link) - Adiciona a origem do repositório remoto
-  ls -a - Mostra arquivos ocultos
-  cd .. - Volta um nível
-  git config --global user.email "email" - identifica o autor, quem gerou o commit
-  git config --global user.name "name" - Um nickname
-  ​

